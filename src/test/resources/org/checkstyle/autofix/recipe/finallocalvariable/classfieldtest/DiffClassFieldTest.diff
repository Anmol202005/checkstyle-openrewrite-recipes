diff --git src/test/resources/org/checkstyle/autofix/recipe/finallocalvariable/classfieldtest/InputClassFieldTest.java src/test/resources/org/checkstyle/autofix/recipe/finallocalvariable/classfieldtest/OutputClassFieldTest.java
index ac06187..74b379e 100644
--- src/test/resources/org/checkstyle/autofix/recipe/finallocalvariable/classfieldtest/InputClassFieldTest.java
+++ src/test/resources/org/checkstyle/autofix/recipe/finallocalvariable/classfieldtest/OutputClassFieldTest.java
@@ -14,7 +14,7 @@ import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-public class InputClassFieldTest {
+public class OutputClassFieldTest {
     private String instanceField = "instance";
     private int counter = 0;
     private List<String> dataList = new ArrayList<>();
@@ -25,10 +25,9 @@ public class InputClassFieldTest {
     private static int globalCounter = 0;
 
     public void FieldsParametersLocalsTest(String name, int initialValue, boolean autoStart) {
-        String normalizedName = name.trim();                // violation, "should be declared final"
-        int validatedValue = Math.max(0, initialValue);     // violation, "should be declared final"
-        // violation below, "should be declared final"
-        String logMessage = "Creating instance with: " + normalizedName;
+        final String normalizedName = name.trim();
+        final int validatedValue = Math.max(0, initialValue);
+        final String logMessage = "Creating instance with: " + normalizedName;
 
         this.instanceField = normalizedName;
         this.counter = validatedValue;
@@ -37,14 +36,11 @@ public class InputClassFieldTest {
 
     public void complexMethod(String param1, int param2, List<String> param3,
                               Map<String, Object> param4, boolean param5) {
-        String workingData = param1 + "_processed";         // violation, "should be declared final"
-        int calculatedSize = param2 * 2;                    // violation, "should be declared final"
-        // violation below, "should be declared final"
-        List<String> filteredList = new ArrayList<>(param3);
-        // violation below, "should be declared final"
-        Map<String, Object> workingMap = new HashMap<>(param4);
-        boolean processFlag = param5 && !param3.isEmpty();  // violation, "should be declared final"
-        // violation below, "should be declared final"
-        String statusMessage = "Processing " + calculatedSize + " items";
+        final String workingData = param1 + "_processed";
+        final int calculatedSize = param2 * 2;
+        final List<String> filteredList = new ArrayList<>(param3);
+        final Map<String, Object> workingMap = new HashMap<>(param4);
+        final boolean processFlag = param5 && !param3.isEmpty();
+        final String statusMessage = "Processing " + calculatedSize + " items";
     }
 }
